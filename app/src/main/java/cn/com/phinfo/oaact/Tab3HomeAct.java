package cn.com.phinfo.oaact;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ListView;import cn.com.phinfo.adapter.ShareMsgListAdapter;import cn.com.phinfo.entity.DataInstance;import cn.com.phinfo.protocol.PollOptionsRun;import cn.com.phinfo.protocol.SearchChatterRun;import cn.com.phinfo.protocol.SearchChatterRun.SearchChatterItem;import cn.com.phinfo.protocol.SearchChatterRun.SearchChatterResultBean;import cn.com.phinfo.view.SharePopWindows;import cn.com.phinfo.view.SharePopWindows.OnPopupWindowsItemListener;import com.alibaba.fastjson.JSON;import com.heqifuhou.actbase.IBroadcastAction;import com.heqifuhou.protocolbase.HttpResultBeanBase;import com.heqifuhou.pulltorefresh.PullToRefreshBase;import com.heqifuhou.pulltorefresh.PullToRefreshBase.Mode;import com.heqifuhou.pulltorefresh.PullToRefreshBase.OnRefreshListener2;import com.heqifuhou.pulltorefresh.PullToRefreshListView;import com.heqifuhou.tab.HttpMyActTabChildBase;public class Tab3HomeAct extends HttpMyActTabChildBase implements OnItemClickListener{	private final int ID_LIST = 0x10,ID_SEND_NEW=0x11;	private int page = 1, PERPAGE_SIZE = 15;	private PullToRefreshListView refreshgridview;	private ShareMsgListAdapter adapter;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        this.addTextNav(new OnClickListener() {			@Override			public void onClick(View arg0) {				publicShareMsg();			}		},"分享","发布");        this.hideBackNav();        this.addViewFillInRoot(R.layout.act_tab3);        refreshgridview = (PullToRefreshListView)findViewById(R.id.refreshListView);        refreshgridview.setMode(Mode.BOTH);		adapter = new ShareMsgListAdapter(this,new OnClickListener() {			@Override			public void onClick(View arg0) {				SearchChatterItem it = (SearchChatterItem)arg0.getTag();			    quickHttpRequest(ID_SEND_NEW,new PollOptionsRun(it.getPoll().getPollId(),it.getPoll().getAllSelOptions()));			}		});        refreshgridview.setAdapter(adapter);        refreshgridview.setOnRefreshListener(new OnRefreshListener2<ListView>(){			@Override			public void onPullDownToRefresh(					PullToRefreshBase<ListView> refreshView) {				page = 1;				onRefresh();				hideLoading(true);			}			@Override			public void onPullUpToRefresh(					PullToRefreshBase<ListView> refreshView) {				onRefresh();				hideLoading(true);			}		});        refreshgridview.setOnItemClickListener(this);                this.findViewById(R.id.queryBtn).setOnClickListener(new OnClickListener() {			@Override			public void onClick(View arg0) {				Intent intent = new Intent(Tab3HomeAct.this,SearchChatterAct.class);				intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);				Tab3HomeAct.this.startActivity(intent);			}		});        onRefresh();    }    private SharePopWindows popWin;    private void publicShareMsg(){    	if(popWin!=null&&popWin.isShowing()){    		return;    	}    	popWin = new SharePopWindows(this,this.findViewById(R.id.tab3Root));    	popWin.show();    	popWin.setOnPopupWindowsItemListener(new OnPopupWindowsItemListener() {			@Override			public void onPopupWindowsItem(int pos) {				if(pos==1||pos==2){					Intent intent = new Intent(Tab3HomeAct.this,CreateShareAct.class);					intent.putExtra("TYPE", pos);					intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);					startActivity(intent);				}else{					Intent intent = new Intent(Tab3HomeAct.this,CreateVoteAct.class);					intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);					startActivity(intent);				}			}		});//    	Intent intent = new Intent(this,PublicShareMsgAct.class);//		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);//		this.startActivity(intent);    	    }        protected void onRefresh(){    	this.quickHttpRequest(ID_LIST, new SearchChatterRun("",page,DataInstance.getInstance().getUserBody().getUserid()));    }	public void onHttpForResult(int id, HttpResultBeanBase obj,			Object requestObj) {		super.onHttpForResult(id, obj, requestObj);	}		@Override	public void onHttpResult(int id, HttpResultBeanBase obj,Object requestObj) {		if(id == ID_LIST){			if(obj.isOK()){				SearchChatterResultBean o = (SearchChatterResultBean)obj;				if (page == 1) {					adapter.clear();				}				adapter.addToListBack(o.getListData());				page++;				if (o.getListData().size() < PERPAGE_SIZE) {					refreshgridview.setMode(Mode.PULL_FROM_START);				} else {					refreshgridview.setMode(Mode.BOTH);				}			}else{				showToast(obj.getMsg());			}			if (adapter.getCount() <= 0) {				refreshgridview.setEmptyView(this.getEmptyView());			} else {				removeEmptyView();			}			return;		}		if(ID_SEND_NEW == id){			if(obj.isOK()){				this.sendBroadcast(new Intent(IBroadcastAction.ACTION_SHARE));				finish();				return;			}else{				showToast(obj.getMsg());			}		}	}	protected void onBroadcastReceiverListener(Context context, Intent intent) {		if(IBroadcastAction.ACTION_SHARE.equals(intent.getAction())){			page=1;			onRefresh();			return;		}		if(IBroadcastAction.ACTION_SHARE_COMM.equals(intent.getAction())){			page=1;			onRefresh();			return;		}		super.onBroadcastReceiverListener(context, intent);	};	@Override	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {		SearchChatterItem it = adapter.getItem(arg2-1);		Intent intent = new Intent(this,ShareDetailAct.class);		intent.putExtra("SearchChatterItem", JSON.toJSONString(it));		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		startActivity(intent);			}}