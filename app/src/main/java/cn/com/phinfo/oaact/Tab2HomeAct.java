package cn.com.phinfo.oaact;import java.io.Serializable;import java.util.Collections;import java.util.Comparator;import java.util.LinkedHashSet;import java.util.List;import java.util.Map;import java.util.Stack;import android.app.ActionBar.LayoutParams;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.LinearLayout;import android.widget.TextView;import cn.com.phinfo.adapter.IconMgrAdapter;import cn.com.phinfo.db.AppAwaysMgrDB2;import cn.com.phinfo.db.AppMgrNeedShowDB;import cn.com.phinfo.db.NetAppModule2DB;import cn.com.phinfo.entity.HomeItem;import cn.com.phinfo.protocol.AppModulesRun.AppModules;import cn.com.phinfo.protocol.AppModulesRun.AppModulesResultBean;import cn.com.phinfo.protocol.AppModulesRun;import cn.com.phinfo.protocol.LURLInterface;import com.heqifuhou.ioscalendar.CalendarAct;import com.heqifuhou.protocolbase.HttpResultBeanBase;import com.heqifuhou.tab.HttpMyActTabChildBase;import com.heqifuhou.view.MyGridView;public class Tab2HomeAct extends HttpMyActTabChildBase implements		OnItemClickListener {	//不定义成数组，方便协议变化	private MyGridView grid0;	private IconMgrAdapter adapter0;	private IconMgrAdapter[] adapterlst;	private MyGridView[] myGride;	private LinearLayout li;	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		this.addTextNav(new OnClickListener() {			@Override			public void onClick(View arg0) {				startIconMgr();			}		},"工作","管理");		this.hideBackNav();		this.addViewFillInRoot(R.layout.act_tab2);		this.li = (LinearLayout) this.findViewById(R.id.li);		initViews();		onRefresh();	}			protected void onRefresh() {		this.quickHttpRequest(0x10, new AppModulesRun());		this.hideLoading();	}		private void startIconMgr(){		Intent intent = new Intent(this,IconMgrAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}		@Override	public void onHttpResult(int id, HttpResultBeanBase obj, Object requestObj) {		if(0x10 == id){			if(obj.isOK()){				AppModulesResultBean o  = (AppModulesResultBean)obj;				List<AppModules> ls = o.getListData();				NetAppModule2DB.getInstance().saveToDB(ls);				this.initLocalViews();			}else{				this.showToast(obj.getMsg());			}		}	}		protected void onResume(){		super.onResume();		this.awalyShow(); 		this.initLocalViews();	}	private void initViews() {		grid0 = (MyGridView) this.findViewById(R.id.grid0);		adapter0 = new IconMgrAdapter(false);		grid0.setAdapter(adapter0);		grid0.setOnItemClickListener(this);	}		private void initLocalViews(){		List<AppModules> ls = NetAppModule2DB.getInstance().getFromDB();		this.li.removeAllViews();		int n  = ls.size();		myGride = new MyGridView[n];		adapterlst = new IconMgrAdapter[n];		for(int i=0;i<n;i++){			AppModules it = ls.get(i);			tryRemoveHomeItemInit(it.getItems());			if(it.getItems().size()<=0){				continue;			}			View v = this.getLayoutInflater(R.layout.adapter_item_tab2);			this.li.addView(v,LayoutParams.FILL_PARENT,LayoutParams.FILL_PARENT);			myGride[i] = (MyGridView) v.findViewById(R.id.appGrid);			adapterlst[i] = new IconMgrAdapter(false);			myGride[i].setAdapter(adapterlst[i]);			myGride[i].setOnItemClickListener(this);			TextView applabel = (TextView) v.findViewById(R.id.applabel);			applabel.setText(it.getLabel());			adapterlst[i].replaceListRef(it.getItems());		}	}	//将选中的选中	private void tryRemoveHomeItemInit(List<HomeItem> lst){		LinkedHashSet<Integer> has = AppMgrNeedShowDB.getInstance().getFromDB();		//如果为空就全部显示		if(has.isEmpty()){			return;		}		for (int i = lst.size()-1; i>=0; i--) {			HomeItem it = lst.get(i);			if(!has.contains(it.getId())){				lst.remove(i);			}		}	}	@Override	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {		HomeItem it = null;		IconMgrAdapter adapter = (IconMgrAdapter) arg0.getAdapter();		it = adapter.getItem(arg2);		if(it!=null){			//存储点击事件			AppAwaysMgrDB2.getInstance().add2DB(it);		}		//如果是网页的直接用网页的方式显示		if(it.getType().equals("web")){			startWebAct(it.getLabel(),it.getLinkUrl());			return;		}		Intent intent=null;		switch(it.getName()){		case "wftasks"://待办事务			intent = new Intent(this,TodosAct.class);			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);			this.startActivity(intent);			break;		case "addresslist"://通讯录			startFriendsAct();			break;		case "calendar"://日程			startCalendarAct();			break;		case "news"://新闻			startNewsActt(it,1);			break;		case "notice"://通知			startNewsActt(it,2);			break;		case "task"://任务			break;		case "file"://优盘			startUAct();			break;		case "email"://邮件			startEmailListAct();			break;		case "meetingroom"://会议室预约			startMeetingOrderCalendarAct();			break;		case "survey"://问卷//			startMyList();			break;		case "log"://日志			startReportAct();			break;		case "meeting"://会议			startMeetingCalendarAct();			break;		case "recordAccount"://记账			break;		case "baoXiao"://报销			break;		case "salaryquery"://工资查询//			startHRLARYActt();			break;		case "checkIn"://签到			startCheckInAddressAct();			break;		case "attendCheck"://考勤打卡			startCheckInAct();			break;			default:				break;		}	}	private void startReportAct(){		Intent intent = new Intent(this,ReportAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);			}	private void startMeetingCalendarAct(){		Intent intent = new Intent(this,MeetingCalendarAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	private void startMeetingOrderCalendarAct(){		Intent intent = new Intent(this,MeetingOrderCalendarAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}		private void startCheckInAddressAct(){		Intent intent = new Intent(this,CheckInAddressAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	private void startCheckInAct(){		Intent intent = new Intent(this,CheckInAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}		private void startUAct(){		Intent intent = new Intent(this,UAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	private void startWebAct(final String title,final String url){		Intent intent = new Intent(this,WebViewRefreshAct.class);		intent.putExtra("TITLE",title);		intent.putExtra("URL",LURLInterface.Create(url));		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}		private void startNewsActt(HomeItem it,int contentTypeCode){		List<HomeItem> ls = new Stack<HomeItem>();		for(int i=0;i<adapterlst.length;i++){			ls.addAll(adapterlst[i].getNewsItemList());		}		Intent intent = new Intent(this,NewsAct.class);		intent.putExtra("NEWSLIST", (Serializable)ls);		intent.putExtra("HomeItem", it);		intent.putExtra("contentTypeCode", contentTypeCode);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	private void startEmailListAct(){//		Intent intent = new Intent(this,EmailListAct.class);		Intent intent = new Intent(this,EmailAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	private void startFriendsAct(){//		Intent intent = new Intent(this,FriendsAct.class);		Intent intent = new Intent(this,AddressAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	private void startCalendarAct(){		Intent intent = new Intent(this,CalendarAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		this.startActivity(intent);	}	//常用的	private void awalyShow(){		adapter0.clear();		List<HomeItem> has = AppAwaysMgrDB2.getInstance().getFromDB();		if(has.isEmpty()){			findViewById(R.id.todo).setVisibility(View.GONE);			return;		}		findViewById(R.id.todo).setVisibility(View.VISIBLE);		//转成list方便排序		Collections.sort(has, new Comparator<HomeItem>() {   			@Override			public int compare(HomeItem arg0, HomeItem arg1) {				int count1 = arg0.getClickCount();		    	int count2 = arg1.getClickCount();		    	return count2-count1;			}		}); 		//取前五个		for (int i = 0; i < Math.min(4,has.size() ); i++) {			HomeItem it = has.get(i);			adapter0.addToListBack(it);		}	}}