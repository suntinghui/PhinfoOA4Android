package cn.com.phinfo.protocol;import java.util.List;import java.util.Stack;import android.content.Context;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import cn.com.phinfo.oaact.R;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.annotation.JSONField;import com.heqifuhou.protocolbase.HttpResultBeanBase;import com.heqifuhou.protocolbase.QuickRunObjectBase;import com.heqifuhou.sortlistview.GroupMemberBean;import com.heqifuhou.utils.ParamsCheckUtils;public class UnitandaddressRun extends QuickRunObjectBase {	public UnitandaddressRun() {		this("");	}	public UnitandaddressRun(final String parentId) {		super(LURLInterface.GET_URL_unitandaddresslist(parentId), null,				UnitandaddressResultBean.class);	}	public static class UnitandaddressResultBean extends HttpResultBeanBase {		private List<UnitandaddressItem> listData = new Stack<UnitandaddressItem>();		public List<UnitandaddressItem> getListData() {			if (this.isStr()) {				listData = JSON.parseArray(this.getJson(),						UnitandaddressItem.class);			}			return listData;		}		public void setListData(List<UnitandaddressItem> listData) {			this.listData = listData;		}		@JSONField(serialize = false)		private List<UnitandaddressItem> listBusinessunit = new Stack<UnitandaddressItem>();		@JSONField(serialize = false)		private List<UnitandaddressItem> listNoBusinessunit = new Stack<UnitandaddressItem>();		@JSONField(serialize = false)		public List<UnitandaddressItem> getListBusinessunit() {			tryGet();			return listBusinessunit;		}		@JSONField(serialize = false)		public List<UnitandaddressItem> getListNoBusinessunit() {			tryGet();			return listNoBusinessunit;		}		@JSONField(serialize = false)		private void tryGet() {			if (!listBusinessunit.isEmpty()) {				return;			}			if (!listNoBusinessunit.isEmpty()) {				return;			}			List<UnitandaddressItem> ls = getListData();			for (int i = 0; i < ls.size(); i++) {				UnitandaddressItem it = ls.get(i);				if (it.getDatatype().equals("businessunit")) {					listBusinessunit.add(it);				} else {					listNoBusinessunit.add(it);				}			}		}	}	public static class UnitandaddressItem extends GroupMemberBean {		private String name;		private String id = "";		private String datatype;		private boolean leaf;		public boolean isLeaf() {			return leaf;		}		public void setLeaf(boolean leaf) {			this.leaf = leaf;		}		public String getName() {			return name;		}		public void setName(String name) {			this.name = name;		}		public String getId() {			return id;		}		public void setId(String id) {			this.id = id;		}		public String getDatatype() {			return datatype;		}		public void setDatatype(String datatype) {			this.datatype = datatype;		}		// 有可有是个		private String fullName;		private String mobile;		private String userId;		private String deptName;		// private String id		// private String datatype="addressList";		private String emailAddress;		private String workPhone;		private String address;		private String fax;		private String gender;		private String status;		private String avatar;		@JSONField(serialize = false)		public boolean isAddressList() {			return ("addressList".equals(this.getDatatype())					|| "systemUser".equals(this.getDatatype()) || "localUser"						.equals(this.getDatatype()));		}		public String getFullName() {			return fullName;		}		public void setFullName(String fullName) {			this.fullName = fullName;		}		public String getMobile() {			return mobile;		}		public void setMobile(String mobile) {			this.mobile = mobile;		}		public String getUserId() {			return userId;		}		public void setUserId(String userId) {			this.userId = userId;		}		public String getDeptName() {			return deptName;		}		public void setDeptName(String deptName) {			this.deptName = deptName;		}		public String getEmailAddress() {			return emailAddress;		}		public void setEmailAddress(String emailAddress) {			this.emailAddress = emailAddress;		}		public String getWorkPhone() {			return workPhone;		}		public void setWorkPhone(String workPhone) {			this.workPhone = workPhone;		}		public String getAddress() {			return address;		}		public void setAddress(String address) {			this.address = address;		}		public String getFax() {			return fax;		}		public void setFax(String fax) {			this.fax = fax;		}		public String getGender() {			return gender;		}		public void setGender(String gender) {			this.gender = gender;		}		public String getStatus() {			return status;		}		public void setStatus(String status) {			this.status = status;		}		public String getAvatar() {			return avatar;		}		public void setAvatar(String avatar) {			this.avatar = avatar;		}		private int nCount = 0;		public int getnCount() {			return nCount;		}		public void setnCount(int nCount) {			this.nCount = nCount;		}		public void addCount() {			this.nCount++;		}		// 是否选中		private boolean bSel = false;		public boolean getIsbSel() {			return bSel;		}		public void setIsbSel(boolean bSel) {			this.bSel = bSel;		}		// /////////////		private String systemUserId;		private String userName;		public String getSystemUserId() {			return systemUserId;		}		public String getUserName() {			return userName;		}		public void setSystemUserId(String systemUserId) {			this.systemUserId = systemUserId;		}		public void setUserName(String userName) {			this.userName = userName;		}		// ////		private String businessUnitId = "";		// private String name;		private String parentBusinessUnitId;		private String objectTypeCode;		public String getBusinessUnitId() {			return businessUnitId;		}		public String getParentBusinessUnitId() {			return parentBusinessUnitId;		}		public String getObjectTypeCode() {			return objectTypeCode;		}		public void setBusinessUnitId(String businessUnitId) {			// this.TO_PINING(businessUnitId,			// getDatatype().equals("businessunit"));			this.businessUnitId = businessUnitId;		}		public void setParentBusinessUnitId(String parentBusinessUnitId) {			this.parentBusinessUnitId = parentBusinessUnitId;		}		public void setObjectTypeCode(String objectTypeCode) {			this.objectTypeCode = objectTypeCode;		}		// 本地头像		@JSONField(serialize = false)		private Bitmap localPhoto;		public Bitmap getLocalPhoto(Context context) {			if (localPhoto == null) {				localPhoto = BitmapFactory.decodeResource(						context.getResources(), R.drawable.icon_avatar);			}			return localPhoto;		}		public Bitmap getLocalPhoto() {			return localPhoto;		}		public void setLocalPhoto(Bitmap localPhoto) {			this.localPhoto = localPhoto;		}		@Override		@JSONField(serialize = false)		protected String onGetUserName() {			if(!ParamsCheckUtils.isNull(name)){				return name;			}			return fullName;//			if ("addressList".equals(this.getDatatype())) {//				return fullName;//			}else if("businessunit".equals(this.getDatatype())){//				return name;//			}//			else if ("systemUser".equals(this.getDatatype())) {//				if(!ParamsCheckUtils.isNull(name)){//					return name;//				}//				return fullName;//			} else if ("localUser".equals(this.getDatatype())) {//				return fullName;//			} else {//				return name;//			}		}		@Override		@JSONField(serialize = false)		protected boolean onIsDir() {			if(ParamsCheckUtils.isNull(this.getDatatype())){				return false;			}			return !isAddressList();		}	}}