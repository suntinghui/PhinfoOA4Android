package cn.com.phinfo.view;import java.util.List;import com.heqifuhou.utils.Utils;import android.app.Activity;import android.content.Intent;import android.graphics.drawable.BitmapDrawable;import android.view.Gravity;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup.LayoutParams;import android.view.animation.AnimationUtils;import android.widget.EditText;import android.widget.PopupWindow;import android.widget.TextView;import cn.com.phinfo.entity.DataInstance;import cn.com.phinfo.oaact.R;import cn.com.phinfo.oaact.SelectPersonAct;import cn.com.phinfo.protocol.UnitandaddressRun.UnitandaddressItem;public class TodosPopMenu extends PopupWindow implements OnClickListener {	private Object it;	private OnDialogTodoOKListener l = null;	private EditText editText;	private TextView txt;	private Activity act;	private static final int ID_NOTIFY = 0x987;	private View parent;	public TodosPopMenu(Activity act, View parent, Object it) {		this.parent = parent;		DataInstance.getInstance().getUnitandaddressItemList().clear();		this.act = act;		this.it = it;		View view = View.inflate(act, R.layout.dialog_todo_readnotify, null);		view.startAnimation(AnimationUtils.loadAnimation(act, R.anim.slide_in_from_bottom));		setWidth(LayoutParams.FILL_PARENT);		setHeight(Utils.dip2px(act, 300));		setBackgroundDrawable(new BitmapDrawable());		setFocusable(true);		setOutsideTouchable(true);		setContentView(view);		editText = (EditText) view.findViewById(R.id.tip);		txt = (TextView) view.findViewById(R.id.txt);		view.findViewById(R.id.btnAdd).setOnClickListener(this);		view.findViewById(R.id.btnOK).setOnClickListener(this);		view.findViewById(R.id.btnCancel).setOnClickListener(this);	}	@Override	public void onClick(View arg0) {		switch (arg0.getId()) {		case R.id.btnAdd:			startSelectPersionAct();			break;		case R.id.btnOK:			dismiss();			if (l != null) {				l.onTodoOKItem(editText.getText().toString(), toMenberList(), it);			}			break;		case R.id.btnCancel:			dismiss();			break;		default:			break;		}	}	public void show() {		showAtLocation(parent, Gravity.BOTTOM, 0, 0);		update();	}	private void startSelectPersionAct() {		Intent intent = new Intent(act, SelectPersonAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		act.startActivityForResult(intent, ID_NOTIFY);	}	public boolean onActivityResult(int requestCode, int resultCode, Intent data) {		if (ID_NOTIFY == requestCode) {			txt.setText(toMenber());			return true;		}		return false;	}	private String toMenber() {		StringBuilder sb = new StringBuilder();		List<UnitandaddressItem> ls = DataInstance.getInstance().getUnitandaddressItemList();		for (int i = 0; i < ls.size(); i++) {			if (i > 0) {				sb.append(",");			}			sb.append(ls.get(i).GET_USER_NAME());		}		return sb.toString();	}	private String toMenberList() {		StringBuilder sb = new StringBuilder();		List<UnitandaddressItem> ls = DataInstance.getInstance().getUnitandaddressItemList();		for (int i = 0; i < ls.size(); i++) {			if (i > 0) {				sb.append(",");			}			sb.append(ls.get(i).getSystemUserId());		}		return sb.toString();	}	public void setOnDialogTodoOKListener(OnDialogTodoOKListener l) {		this.l = l;	}	public interface OnDialogTodoOKListener {		void onTodoOKItem(String txt, String menber, Object obj);	}}