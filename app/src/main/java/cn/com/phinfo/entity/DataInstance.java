package cn.com.phinfo.entity;import java.util.List;import java.util.Stack;import com.alibaba.fastjson.JSON;import com.heqifuhou.utils.ParamsCheckUtils;import cn.com.phinfo.db.LoginDB;import cn.com.phinfo.protocol.LURLInterface;import cn.com.phinfo.protocol.EmailAttacheRun.EmailAttacheResultBean;import cn.com.phinfo.protocol.EmailInfoRun.EmailInfoResultBean;import cn.com.phinfo.protocol.LoginRun.LoginResultBean;import cn.com.phinfo.protocol.UnitandaddressRun.UnitandaddressItem;public class DataInstance {	private static DataInstance instance = new DataInstance();	private DataInstance() {		InitDataInstance();	}	public static DataInstance getInstance() {		if (instance == null) {			instance = new DataInstance();		}		return instance;	}		private void InitDataInstance() {		this.name = LoginDB.getInstance().getUsernameFromDB();		this.pwd = LoginDB.getInstance().getPasswordFromDB();		this.userBody = LoginDB.getInstance().getUserBean();		LURLInterface.init();//		LURLInterface.setTest(LoginDB.getInstance().isTest());//		this.userBody = new LoginResultBean();//		this.userBody.setAccess_token("27a909e1-9fb4-4c67-afcd-3dc9032fdd6b");	}	public void setNull() {		instance = null;	}	public void setNull2DBWithOutAccount(){		saveUser(this.name,this.pwd,null);		instance = null;	}	public void setNull2DB(){		saveUser("","",null);		instance = null;	}	public void setUserNull() {		name = null;		pwd = null;		userBody = null;	}	public final String getName() {		return this.name;	}	public final String getPwd() {		return this.pwd;	}	public boolean isLogin() {		return !ParamsCheckUtils.isNull(userBody);	}	public String getToken() {		if(userBody!=null){			return userBody.getAccess_token();		}		return "";	}	private String name = null, pwd = null;	private LoginResultBean userBody = null;	public void saveUser(String username, String password, LoginResultBean userBody) {		this.name = username;		this.pwd = password;		this.userBody = userBody;		LoginDB.getInstance().saveToDB(name, pwd, userBody,LURLInterface.isTest());	}	public void saveUser(final LoginResultBean user) {		this.userBody = user;		LoginDB.getInstance().saveToDB(name, pwd, user,LURLInterface.isTest());	}			public void saveUser2DB(){		LoginDB.getInstance().saveToDB(name, pwd, this.userBody,LURLInterface.isTest());	}	public final LoginResultBean getUserBody() {		return this.userBody;	}	//	private List<UnitandaddressItem> lst = new Stack<UnitandaddressItem>();	public final List<UnitandaddressItem> getUnitandaddressItemList(){		return lst;	}	public void removeUnitandaddressItem(UnitandaddressItem it){		for(int i=0;i<lst.size();i++){			UnitandaddressItem _it = lst.get(i);			if(_it.getSystemUserId().equals(it.getSystemUserId())){				lst.remove(i);				break;			}		}	}	public void addUnitandaddressItem(List<UnitandaddressItem> lst){		for(int i=0;i<lst.size();i++){			UnitandaddressItem it = lst.get(i);			addUnitandaddressItem(it);		}	}	public void addUnitandaddressItem(UnitandaddressItem it){		for(int i=0;i<lst.size();i++){			UnitandaddressItem _it = lst.get(i);//			if(_it.getSystemUserId().equals(it.getSystemUserId())){//				return;//			}			if (_it.getUserId().equalsIgnoreCase(it.getUserId())) {				return;			}		}		this.lst.add(it);	}	public boolean isContains(UnitandaddressItem it){		for(int i=0;i<lst.size();i++){			UnitandaddressItem _it = lst.get(i);			if(_it.getSystemUserId().equals(it.getSystemUserId())){				return true;			}		}		return false;	}	//转发邮件	private String emailContentTxt;	private EmailAttacheResultBean emailAttacheList;	private EmailInfoResultBean emailInfo;	public EmailInfoResultBean getEmailInfo() {		return emailInfo;	}	public String getEmailContentTxt() {		return emailContentTxt;	}	public EmailAttacheResultBean getEmailAttacheList() {		return emailAttacheList;	}	public void setEmailInfo(EmailAttacheResultBean emailAttacheList,EmailInfoResultBean emailInfo,String emailContentTxt) {		this.emailAttacheList = emailAttacheList;//JSON.parseObject(JSON.toJSONString(emailAttacheList),EmailAttacheResultBean.class);		this.emailInfo = emailInfo;//JSON.parseObject(JSON.toJSONString(emailInfo),EmailInfoResultBean.class);		this.emailContentTxt = emailContentTxt;	}}