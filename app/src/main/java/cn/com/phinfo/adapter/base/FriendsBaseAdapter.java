package cn.com.phinfo.adapter.base;import java.util.Collections;import java.util.List;import android.graphics.Color;import android.graphics.drawable.Drawable;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import cn.com.phinfo.oaact.R;import com.heqifuhou.adapterbase.MyImgAdapterBaseAbs;import com.heqifuhou.sortlistview.GroupMemberBean;import com.heqifuhou.sortlistview.HanyuToPinyinUtils;import com.heqifuhou.sortlistview.PinyinComparator;import com.heqifuhou.textdrawable.TextDrawable;import com.heqifuhou.utils.ParamsCheckUtils;public abstract class FriendsBaseAdapter<E> extends MyImgAdapterBaseAbs<E>{	private List<E> oldList = null;	private PinyinComparator pinyinComparator;	public FriendsBaseAdapter(){		//拼音排序		pinyinComparator = new PinyinComparator();	}	@Override	public View getView(int arg0, View arg1, ViewGroup arg2) {		GroupMemberBean it = (GroupMemberBean) this.getItem(arg0);		int type = getItemViewType(arg0);		Holder hoder = null;		if (arg1 == null) {			hoder = new Holder();			if(type==0){				arg1 = LayoutInflater.from(arg2.getContext()).inflate(						R.layout.adapter_dir_item, null);				hoder.item_title = (TextView) arg1.findViewById(R.id.item_title);			}else{				arg1 = LayoutInflater.from(arg2.getContext()).inflate(						R.layout.adapter_alluser_item, null);				hoder.tvLetter = (TextView) arg1.findViewById(R.id.catalog);				hoder.item_text_state = (TextView) arg1.findViewById(R.id.item_text_state);				hoder.home_icon = (ImageView) arg1.findViewById(R.id.info);				hoder.item_text = (TextView) arg1.findViewById(R.id.item_text);				hoder.item_title = (TextView) arg1.findViewById(R.id.item_title);				hoder.item_text1 = (TextView) arg1.findViewById(R.id.item_text1);				hoder.item_text2 = (TextView) arg1.findViewById(R.id.item_text2);				hoder.stateLi = arg1.findViewById(R.id.stateLi);			}			arg1.setTag(hoder);			}else{			hoder = (Holder) arg1.getTag();		}		hoder.item_title.setText(it.GET_USER_NAME());		//显示字母		if(!it.getIsDir())		{			int section = getSectionForPosition(arg0);			if (arg0 == getPositionForSection(section)) {				hoder.tvLetter.setVisibility(View.VISIBLE);				hoder.tvLetter.setText(it.getSortLetters());			} else {				hoder.tvLetter.setVisibility(View.GONE);			}		}else{//			hoder.tvLetter.setVisibility(View.GONE);		}		onSetData(hoder,(E)it);		return arg1;	}			protected abstract void onSetData(Holder holder,E it);	//根据ListView的当前位置获取分类的首字母的Char ascii值	public int getSectionForPosition(int position) {		GroupMemberBean it = (GroupMemberBean) this.getItem(position);		return it.getSortLetters().charAt(0);	}	//根据分类的首字母的Char ascii值获取其第一次出现该首字母的位置	public int getPositionForSection(int section) {		for (int i = 0; i < getCount(); i++) {			GroupMemberBean it = (GroupMemberBean) this.getItem(i);			String sortStr = it.getSortLetters();			char firstChar = sortStr.toUpperCase().charAt(0);			if (firstChar == section) {				return i;			}		}		return -1;	}	public void filterStr(String filterStr){		List<E> lsCopy = this.getListCopy();		for(int i=lsCopy.size()-1;i>=0;i--){			GroupMemberBean us = (GroupMemberBean)lsCopy.get(i);			if(us.getIsDir()){				continue;			}			String name = us.GET_USER_NAME();			if (name.indexOf(filterStr) != -1					|| HanyuToPinyinUtils.HanyuToPinyin(name).startsWith(							filterStr)) {				//do nothing			}else{				lsCopy.remove(i);			}			}		Collections.sort(lsCopy, pinyinComparator);		super.replaceListRef(lsCopy);		// 根据a-z进行排序源数据		this.sort(pinyinComparator);		this.notifyDataSetChanged();	}		@Override	public void addToListBack(List<E> list){		this.addToListBackWithOutNotifyData(list);		this.sort(pinyinComparator);		this.notifyDataSetChanged();		this.oldList = this.getListRef();	}		@Override	public void replaceListRef(List<E> list) {		super.clear();		this.addToListBack(list);	}	public void reToOldListRef(){		if(this.oldList!=null){			super.replaceListRef(this.oldList);		}	}		public int getItemViewType(int position) {		GroupMemberBean it = (GroupMemberBean) this.getItem(position);		if(it.getIsDir()){			return 0;		}		return 1;	} 	public int getViewTypeCount(){		return 2;	}		public static class Holder{		public TextView item_text,item_title,item_text1,item_text2,tvLetter,item_text_state;		public ImageView home_icon;		public View stateLi;	}}