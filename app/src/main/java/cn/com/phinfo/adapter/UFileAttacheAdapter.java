package cn.com.phinfo.adapter;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.ProgressBar;import android.widget.TextView;import cn.com.phinfo.oaact.R;import cn.com.phinfo.protocol.FileSearchRun.UFileItem;import com.heqifuhou.adapterbase.MyAdapterBaseAbs;import com.heqifuhou.utils.ParamsCheckUtils;public class UFileAttacheAdapter extends MyAdapterBaseAbs<UFileItem> {	private OnUFileItemClickListener listener;	@Override	public View getView(int arg0, View arg1, ViewGroup arg2) {		UFileItem it = this.getItem(arg0);		Holder hoder = null;		if (it.getIsLocalFile()) {			if (arg1 == null) {				hoder = new Holder();				arg1 = LayoutInflater.from(arg2.getContext()).inflate(						R.layout.adapter_ufile_upload_item, null);				hoder.progressBtn = (TextView)arg1.findViewById(R.id.progressBtn);				hoder.pic = (ImageView) arg1.findViewById(R.id.pic);				hoder.progressbar = (ProgressBar) arg1						.findViewById(R.id.progress);				hoder.name = (TextView) arg1.findViewById(R.id.name);				hoder.state = (TextView) arg1.findViewById(R.id.state);				arg1.setTag(hoder);			} else {				hoder = (Holder) arg1.getTag();			}		} else {			if (arg1 == null) {				hoder = new Holder();				arg1 = LayoutInflater.from(arg2.getContext()).inflate(						R.layout.adapter_ufileattache_item, null);				hoder.name = (TextView) arg1.findViewById(R.id.name);				hoder.kbSize = (TextView) arg1.findViewById(R.id.kbSize);				hoder.pic = (ImageView) arg1.findViewById(R.id.pic);				hoder.progressbar = (ProgressBar) arg1						.findViewById(R.id.progress);				hoder.progressbar.setVisibility(View.VISIBLE);				hoder.state = (TextView) arg1.findViewById(R.id.state);				hoder.createName = (TextView) arg1						.findViewById(R.id.createName);				hoder.createDateTime = (TextView) arg1						.findViewById(R.id.createDateTime);				hoder.next = arg1.findViewById(R.id.next);				arg1.setTag(hoder);			} else {				hoder = (Holder) arg1.getTag();			}		}		hoder.name.setText(it.getName());		hoder.pic.setImageResource(it.getImgResId());		if (!it.getIsLocalFile()) {			if (it.getProgress() > 0) {				hoder.state.setVisibility(View.VISIBLE);				hoder.state.setText(it.getProgress() + "%");				hoder.progressbar.setVisibility(View.VISIBLE);				hoder.progressbar.setProgress(it.getProgress());			} else {				hoder.progressbar.setVisibility(View.GONE);				hoder.state.setVisibility(View.GONE);			}			hoder.createDateTime.setText(it.getCreatedOn());			if (!ParamsCheckUtils.isNull(it.getFileSize())) {				hoder.kbSize.setText(it.getFileSize2KB());			}			hoder.createName.setText(it.getCreatedByName());			// 点击下拉			hoder.next.setTag(it);			hoder.next.setOnClickListener(new OnClickListener() {				@Override				public void onClick(View arg0) {					if (listener != null) {						UFileItem _it = (UFileItem) arg0.getTag();						listener.onUFileItemListener(_it);					}				}			});		} else {			switch(it.isRunType())			{			case 0://0 成功				hoder.progressBtn.setText("上传");				hoder.state.setText("上传成功");				break;			case 1://1未开始				hoder.progressBtn.setText("上传");				hoder.state.setText("待上传");				break;			case 2://2正在上传				hoder.progressBtn.setText("取消");				hoder.state.setText("正在上传"+it.getProgress()+"%");				break;			case 3://3，失败				hoder.progressBtn.setText("上传");				hoder.state.setText("上传失败");				break;			case 4://4停止				hoder.progressBtn.setText("上传");				hoder.state.setText("已取消上传");				break;			}			if (it.getProgress() > 0) {				hoder.progressbar.setProgress(it.getProgress());			}//			hoder.progressBtn.setTag(it);//			hoder.progressBtn.setOnClickListener(new OnClickListener() {//				@Override//				public void onClick(View arg0) {//					if (listener != null) {//						UFileItem _it = (UFileItem) arg0.getTag();//						listener.onUFileItemListener(_it);//					}//				}//			});		}		return arg1;	}	// 重命名	public void reName(UFileItem it) {		boolean bFound = false;		for (int i = 0; i < this.getCount(); i++) {			UFileItem _it = this.getItem(i);			if (_it.isFloder() == it.isFloder()) {				if (_it.getId().equals(it.getId())) {					_it.setName(it.getName());					bFound = true;					break;				}			}		}		if (bFound) {			this.notifyDataSetChanged();		}	}	@Override	public int getViewTypeCount() {		return 2;	}	@Override	public int getItemViewType(int position) {		if (this.getItem(position).getIsLocalFile()) {			return 0;		}		return 1;	}	// 删除	public void del(UFileItem it) {		boolean bFound = false;		for (int i = 0; i < this.getCount(); i++) {			UFileItem _it = this.getItem(i);			if (_it.isFloder() == it.isFloder()) {				if (_it.getId().equals(it.getId())) {					remove(i);					bFound = true;					break;				}			}		}		if (bFound) {			this.notifyDataSetChanged();		}	}	public interface OnUFileItemClickListener {		void onUFileItemListener(UFileItem it);	}	public void setOnUFileItemClickListener(OnUFileItemClickListener l) {		this.listener = l;	}	public void startDonLoadAll() {		for (int i = 0; i < this.getCount(); i++) {			UFileItem it = this.getItem(i);			it.startDownLoad();		}	}	//	public void startUploadAll(final String url){//		for (int i = 0; i < this.getCount(); i++) {//			UFileItem it = this.getItem(i);//			it.startUpload(url);//		}//	}	public void stopAll() {		for (int i = 0; i < this.getCount(); i++) {			UFileItem it = this.getItem(i);			it.stop();		}	}	class Holder {		public TextView name, kbSize, title, state, createDateTime, createName;		public ImageView pic;		public ProgressBar progressbar;		public View next;		public TextView progressBtn;	}}