package com.heqifuhou.sortlistview;import java.io.Serializable;import android.graphics.Color;import android.graphics.drawable.Drawable;import com.alibaba.fastjson.annotation.JSONField;import com.heqifuhou.textdrawable.TextDrawable;import com.heqifuhou.utils.ParamsCheckUtils;public abstract class GroupMemberBean implements Serializable{	private String _UserName;	private int msgCount=0;//总数(数据库本地记来用的，平时没有用	private boolean isDir = false;	public boolean getIsDir() {		return isDir;	}	// 汉字转换成拼音的类	@JSONField(serialize=false)	private String sortLetters;  //显示数据拼音的首字母	@JSONField(serialize=false)	public String getSortLetters() {		GET_USER_NAME();		return sortLetters;	}	@JSONField(serialize=false)	public void setSortLetters(String sortLetters) {		this.sortLetters = sortLetters;	}	@JSONField(serialize=false)	//转成拼音	private void TO_PINING(String name,boolean bDir){		this._UserName = name;		this.isDir = bDir;		if(bDir){			setSortLetters("*");			return;		}		if(ParamsCheckUtils.isNull(_UserName)){			setSortLetters("#");			return;		}		try{			// 汉字转换成拼音			String pinyin = HanyuToPinyinUtils.HanyuToPinyin(_UserName.trim());			String sortString = "#";			if(!ParamsCheckUtils.isNull(pinyin)){				sortString = pinyin.substring(0, 1);				if(ParamsCheckUtils.isNull(sortString)){					sortString= sortString.toUpperCase();				}			}			// 正则表达式，判断首字母是否是英文字母			if (sortString.matches("[A-Z]")) {				setSortLetters(sortString.toUpperCase());			} else {				setSortLetters("#");			}		}catch (Exception e){			setSortLetters("#");		}	}	public int getMsgCount() {		return msgCount;	}	public void setMsgCount(int msgCount) {		this.msgCount = msgCount;	}	@JSONField(serialize=false)	public String GET_USER_NAME() {		if(ParamsCheckUtils.isNull(this._UserName)){			String name = onGetUserName();			boolean bDir = onIsDir();			TO_PINING(name,bDir);		}		return this._UserName;	}	@JSONField(serialize=false)	public String GET_FIRST_NAME(){		GET_USER_NAME();		if(ParamsCheckUtils.isNull(this._UserName)){			return getSortLetters();		}		return _UserName.substring(0, 1);	}	@JSONField(serialize=false)	private Drawable nameDrawable=null;	@JSONField(serialize=false)	public Drawable GET_NAME_DRAWABLE(){		if(nameDrawable == null){			String _name = GET_USER_NAME();			if(ParamsCheckUtils.isNull(_name)){				_name = "";			}			if(_name.length()>1){				_name = _name.substring(_name.length()-2);			}			//显示头像			nameDrawable=TextDrawable.builder()		            .buildRound(_name,Color.parseColor("#FFd6eae9"));		}		return nameDrawable;	}			@JSONField(serialize=false)	protected abstract String onGetUserName();	@JSONField(serialize=false)	protected abstract boolean onIsDir();	}