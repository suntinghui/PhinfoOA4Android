package com.heqifuhou.tab;import java.io.Serializable;import com.heqifuhou.protocolbase.HttpResultBeanBase;import android.content.Context;import android.content.Intent;import android.graphics.PixelFormat;import android.view.WindowManager;import android.view.WindowManager.LayoutParams;import android.widget.Button;import cn.com.phinfo.entity.DataInstance;import cn.com.phinfo.oaact.LoginAct;public abstract class ThreadLoginMainTabActivityBase extends ThreadMainTabActivityBase{	protected static final int ID_LOGIN = 0x99;	private boolean bStartActForResult = false;	private int code;	private Intent intents = null;	private Button button;	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		if (ID_LOGIN == requestCode && resultCode == RESULT_OK) {			onActivityLoginOkResult(data);		}		super.onActivityResult(requestCode, resultCode, data);	}	protected void onActivityLoginOkResult(Object data) {		if (intents != null) {			if (!bStartActForResult) {				super.startActivity(intents);			} else {				super.startActivityForResult(intents, code);			}		}	}		public void onHttpForResult(int id, HttpResultBeanBase obj,Object requestObj) {//		if(obj!=null&&obj.isCODE_401()){//			removeHttpThread(id);//			DataInstance.getInstance().saveUser("","",null);//			startLoginAct();//			return;//		}		super.onHttpForResult(id, obj,requestObj);	}	protected final boolean startActivityWithLogin(Class<?> cls) {		Intent i = new Intent(this, cls);		i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		return startActivityWithLogin(i);	}		protected final boolean startActivityWithLogin(Intent intent) {		if(!DataInstance.getInstance().isLogin()){			bStartActForResult = false;			this.intents = intent;			startLoginAct();			return true;		}else{			super.startActivity(intent);			return false;		}	}	protected final boolean startActivityWithLogin(Intent intents, int code) {		if (!DataInstance.getInstance().isLogin()) {			bStartActForResult = true;			this.intents = intents;			this.code = code;			startLoginAct();			return true;		} else {			startActivityForResult(intents, code);			return false;		}	}		protected void startLoginAct(){		Intent intent = new Intent(this,LoginAct.class);		intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);		startActivityForResult(intent, ID_LOGIN);	}	protected void startLoginAct(Object obj){		if (!DataInstance.getInstance().isLogin()) {			Intent intent = new Intent(this,LoginAct.class);			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);			intent.putExtra("OBJECT",(Serializable)obj);			startActivityForResult(intent, ID_LOGIN);		} else {			this.onActivityLoginOkResult(obj);		}	}	//添加一像素	protected void add1Pix(){		if(button == null){			button = new Button(getApplicationContext());  			WindowManager wm = (WindowManager) getApplicationContext()  			        .getSystemService(Context.WINDOW_SERVICE);  			WindowManager.LayoutParams wmParams = new WindowManager.LayoutParams();  			  			/** 			 * 以下都是WindowManager.LayoutParams的相关属性 具体用途请参考SDK文档 			 */  			wmParams.type = LayoutParams.TYPE_PHONE; // 这里是关键，你也可以试试2003  			wmParams.format = PixelFormat.RGBA_8888; // 设置图片格式，效果为背景透明  			/** 			 * 这里的flags也很关键 代码实际是wmParams.flags |= FLAG_NOT_FOCUSABLE; 			 * 40的由来是wmParams的默认属性（32）+ FLAG_NOT_FOCUSABLE（8） 			 */  			wmParams.flags = LayoutParams.FLAG_NOT_TOUCH_MODAL  			        | LayoutParams.FLAG_NOT_FOCUSABLE  			        | LayoutParams.FLAG_NOT_TOUCHABLE;  			wmParams.width = 1;  			wmParams.height = 1;  			wm.addView(button, wmParams); // 创建View 			}	}	protected void remove1Px(){		if(button == null){			return;		}		WindowManager wm = (WindowManager) getApplicationContext()  		        .getSystemService(Context.WINDOW_SERVICE);		wm.removeView(button);		button = null;	}}