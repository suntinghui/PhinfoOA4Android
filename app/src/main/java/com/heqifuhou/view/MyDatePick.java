package com.heqifuhou.view;import java.util.Calendar;import android.app.Activity;import android.app.DatePickerDialog.OnDateSetListener;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.DatePicker;import android.widget.DatePicker.OnDateChangedListener;import cn.com.phinfo.oaact.R;public class MyDatePick extends MyDialog implements OnClickListener {	private DatePicker datePicker;	private int year;	private int monthOfYear;	private int dayOfMonth;	private OnDateSetListener callBack;	private int nResultYear,nResultMonthOfYear,nResultDayOfMonth;	private boolean bShowDay;	public MyDatePick(Activity act, OnDateSetListener callBack, int year,			int monthOfYear, int dayOfMonth) {		this(act,callBack,year,monthOfYear,dayOfMonth,true);	}	public MyDatePick(Activity act, OnDateSetListener callBack, int year,			int monthOfYear, int dayOfMonth,boolean bShowDay) {		super(act);		this.year = year;		this.monthOfYear = monthOfYear;		this.dayOfMonth = dayOfMonth;		this.callBack = callBack;		this.bShowDay = bShowDay;	}	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		this.setContentView(R.layout.mydatepick_dialog_popupwindows);		datePicker = (DatePicker) this.findViewById(R.id.new_act_date_picker);		this.findViewById(R.id.item_popupwindows_cancel).setOnClickListener(				this);		this.findViewById(R.id.item_popupwindows_ok).setOnClickListener(				this);		if (year < 0 || monthOfYear < 0 || dayOfMonth < 0) {			Calendar calendar = Calendar.getInstance();			year = calendar.get(Calendar.YEAR);			monthOfYear = calendar.get(Calendar.MONTH);			dayOfMonth = calendar.get(Calendar.DAY_OF_MONTH);		}		this.nResultYear = year;		this.nResultMonthOfYear = monthOfYear;		this.nResultDayOfMonth = dayOfMonth;		datePicker.init(year, monthOfYear, dayOfMonth,				new OnDateChangedListener() {					@Override					public void onDateChanged(DatePicker view, int year,							int monthOfYear, int dayOfMonth) {						nResultYear = year;						nResultMonthOfYear = monthOfYear;						nResultDayOfMonth = dayOfMonth;					}				});		datePicker.updateDate(year, monthOfYear, dayOfMonth);		if(!bShowDay){			hideDay();		}	}	private void hideDay(){		if(datePicker==null){			return;		}		ViewGroup v = (ViewGroup) datePicker.getChildAt(0);		if(v!=null){			v = (ViewGroup) v.getChildAt(0);			if(v!=null){				View vv = v.getChildAt(2);				if(vv!=null){					vv.setVisibility(View.GONE); 				}			}		}	}	@Override	public void onClick(View arg0) {		switch (arg0.getId()) {		case R.id.item_popupwindows_ok:			if (callBack != null) {				callBack.onDateSet(datePicker, nResultYear, nResultMonthOfYear,						nResultDayOfMonth);			}			break;		case R.id.item_popupwindows_cancel:			break;		default:		}		dismiss();	}}